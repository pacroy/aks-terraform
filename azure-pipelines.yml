trigger:
  - master
  
pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: 'terraform_install'
    displayName: 'Install Terraform'
    jobs:
      - job: 'terraform_install'
        displayName: 'Install Terraform'
        steps:
          - checkout: none
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: '0.12.24'
  - stage: 'terraform_plan'
    displayName: 'Plan Terraform'
    jobs:
      - job: terraform_plan
        displayName: 'Plan Terraform'
        steps:
          - task: TerraformTaskV1@0
            displayName: 'Init Terraform'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: $(backendAzureRmServiceName)
              backendAzureRmResourceGroupName: $(backendAzureRmResourceGroupName)
              backendAzureRmStorageAccountName: $(backendAzureRmStorageAccountName)
              backendAzureRmContainerName: $(backendAzureRmContainerName)
              backendAzureRmKey: $(backendAzureRmKey)
          - task: TerraformTaskV1@0
            displayName: 'Plan Terraform'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out=tfplan -input=false -var resource_group_name=$(aksResourceGroupName) -var location=$(aksLocation) -var aks_cluster_name=$(aksClusterName) -var aks_client_id=$(aksServicePrincipleId) -var aks_client_secret=$(aksServicePrincipleSecret) -var tag_cluster=$(aksClusterNickname)'
              environmentServiceNameAzureRM: $(aksAzureRmServiceName)
          - publish: ./
            artifact: all-artifacts
            displayName: Publish All Artifacts
  - stage: 'terraform_apply'
    displayName: 'Apply Terraform'
    jobs:
      - deployment: apply_terraform
        displayName: 'Apply Terraform'
        environment: $(aksADOEnvironmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - bash: pwd
                  workingDirectory: '../all-artifacts'
                - task: TerraformTaskV1@0
                  displayName: 'Apply Terraform'
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    commandOptions: '-auto-approve tfplan'
                    environmentServiceNameAzureRM: $(aksAzureRmServiceName)